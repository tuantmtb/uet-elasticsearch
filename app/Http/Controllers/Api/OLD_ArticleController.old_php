<?php
namespace App\Http\Controllers\Api;

use App\Models\Article;
use Illuminate\Foundation\Bus\DispatchesJobs;
use Illuminate\Routing\Controller as BaseController;
use Illuminate\Foundation\Validation\ValidatesRequests;
use Illuminate\Foundation\Auth\Access\AuthorizesRequests;
use Illuminate\Http\Request;
use phpDocumentor\Reflection\Types\Array_;


class ArticleController extends BaseController
{
    /**
     * GET: /articles/{article_id}/info
     * @param $article_id
     * @return \Illuminate\Http\JsonResponse
     */
    public function getInfo($article_id)
    {
        $output = [];
        $article = Article::find($article_id);
        if (!$article || $article->count() <= 0) {
            // not found article by id
            $output["status"] = "not_found";
            return response()->json($output);
        }
        $output["status"] = "success";
        $output["article"] = $article;
        $article->cites; // call list article cite
        $article->citeds; // call list article cited
        return response()->json($output);
    }

    /**
     * GET: /articles/all
     * @return \Illuminate\Http\JsonResponse
     */
    public function getAll()
    {
        $output = [];
        $articles = Article::all();
        if (!$articles || $articles->count() <= 0) {
            // not found article by id
            $output["status"] = "not_found";
            return response()->json($output);
        } else {
            $output["status"] = "success";
            $output["articles"] = [];
            foreach ($articles as $article) {
//                $article->citeds;
//                $article->cites;
                $output["articles"][] = $article;
            }
        }

        return response()->json($output);
    }



    /**
     * POST /articles
     * @param Article $request
     */
    public function saveArticle(Request $request)
    {
//        $validator = Validator::make($request->all(), [
//
//        ]);

        $output = [];
        if ($request->id) {
            // update
            $article = Article::find($request->id);
            if (!$article | $article->count() <= 0) {
                // không tìm thấy id
                $output["status"] = "not_found";
                return response()->json($output);
            } else {
                // update article đã có trong csdl
                $article = $this->updateArticle($request, $article);
                $output["status"] = "success";
                $output["article"] = $article;
                $output["meta"] = "updated article from id";
                return response()->json($output);
            }
        } else {
            $article = $this->searchArticle($request);

            if ($article != null) {
                // cluster id đã có trong csdl
                // find article from cluster_id -> update
                $article = $this->updateArticle($request, $article);
                if ($article) {
                    $output["status"] = "success";
                    $output["meta"] = "update more info article";
                } else {
                    $output["status"] = "cant_update";
                    $output["meta"] = "can not update because not found article";
                }
            } else {
                // create new article
                $article = $this->createArticle($request);
                $output["meta"] = "create new article";
                $output["status"] = "success";
            }

            $output["article"] = $article;
            return response()->json($output);
        }
    }

    /**
     * GET /articles/citation/{cite_id}/{cited_id}
     * @param $cite_id
     * @param $cited_id
     * @return \Illuminate\Http\JsonResponse
     */
    public function relationCitation($cite_id, $cited_id)
    {
        $article_cite = Article::findOrFail($cite_id);
        $article_cited = Article::findOrFail($cited_id);
        $article_cite->assignCitation($article_cited);
        $output = [];
        $output["status"] = "success";
        $output["meta"] = "created relation";
        return response()->json($output);
    }

    /**
     * POST /articles/updateBatch
     * @param Request $request
     */
    public function updateBatch(Request $request)
    {
        // find article if have
        $article = $this->searchArticle($request);
        $articleSaved = null;
        $output = [];
        if ($article != null) {
            $output["meta"] = "found article, updated article";
            // update
            $articleSaved = $this->updateArticle($request, $article);
        } else {
            $output["meta"] = "create new article";
            $articleSaved = $this->createArticle($request);
        }

        // update or create relation citation
        $lstArticles = $request->citeds;
        foreach ($lstArticles as $articleArray) {
            $articleObject = $this->arrayToArticle($articleArray);
            $articleCitedSaved = $this->createOrUpdateArticle($articleObject);

//            dd($articleCitedSaved);
            $articleSaved->assignCitation($articleCitedSaved);
        }
        return $article;
    }

    /**
     * @param Array_ $input
     * @return Article
     */
    private function arrayToArticle($input)
    {
        $article = new Article();
        $article->title = $input["title"];
        $article->author = $input["author"];
        $article->journal = $input["journal"];
        $article->volume = $input["volume"];
        $article->number = $input["number"];
        $article->year = $input["year"];
        $article->uri = $input["uri"];
        $article->titleOnGoogle = $input["titleOnGoogle"];
        $article->cluster_id = $input["cluster_id"];
        $article->cites_id = $input["cites_id"];
        $article->cites_count = $input["cites_count"];
        $article->mla = $input["mla"];
        $article->apa = $input["apa"];
        $article->chicago = $input["chicago"];
        $article->harvard = $input["harvard"];
        $article->vancouver = $input["vancouver"];
        $article->abstract = $input["abstract"];
        $article->source = $input["source"];
        $article->usable = $input["usable"];
        $article->reference = $input["reference"];
        $article->language = $input["language"];
        return $article;
    }

    /**
     * @param Article|Request $request
     * @return Article|null
     */
    private function searchArticle($request)
    {
        $article = null;
        $articles = null;
        if ($request->cluster_id) {
            // Gửi đi cả cluster id
            $articles = Article::where('cluster_id', '=', $request->cluster_id)->get();
        } elseif ($request->cites_id) {
            $articles = Article::where('cite_id', '=', $request->cites_id)->get();
        } elseif ($request->title) {
            $articles = Article::where('title', '=', $request->title)->get();
        } elseif ($request->titleOnGoogle) {
            $articles = Article::where('title', '=', $request->titleOnGoogle)->get();
        }
        if ($articles != null && $articles->count() > 0 && $articles->first() != null) {
            $article = $articles->first();
            return $article;
        } else {
            // not found article
            return null;
        }
    }

    /**
     * @param Article|Request $request
     * @return Article|null
     */
    private function createOrUpdateArticle($request)
    {
        // find article if have
//        dd(gettype($request));
        $article = $this->searchArticle($request);


        $articleSaved = null;
        if ($article != null) {
            $articleSaved = $this->updateArticleNonRequest($request, $article);
        } else {
            $articleSaved = $this->createArticleNonRequest($request);
        }

        return $articleSaved;
    }

    /**
     * @param Article $request
     * @return Article|null
     */
    private function updateArticle(Request $request, Article $article)
    {
        if ($article) {
            // update article đã có trong csdl
            // found article by id
            $title = $request->title;
            $author = $request->author;
            $journal = $request->journal;
            $volume = $request->volume;
            $number = $request->number;
            $year = $request->year;
            $uri = $request->uri;
            $titleOnGoogle = $request->titleOnGoogle;
            $cluster_id = $request->cluster_id;
            $cites_id = $request->cites_id;
            $cites_count = $request->cites_count;
            $mla = $request->mla;
            $apa = $request->apa;
            $chicago = $request->chicago;
            $harvard = $request->harvard;
            $vancouver = $request->vancouver;
            $abstract = $request->abstract;
            $source = $request->source;
            $usable = $request->usable;
            $reference = $request->reference;
            $language = $request["language"];
            if ($title) {
                $article->title = $title;
            }
            if ($author) {
                $article->author = $author;
            }
            if ($journal) {
                $article->journal = $journal;
            }
            if ($volume) {
                $article->volume = $volume;
            }
            if ($number) {
                $article->number = $number;
            }
            if ($year) {
                $article->year = $year;
            }
            if ($uri) {
                $article->uri = $uri;
            }
            if ($titleOnGoogle) {
                $article->titleOnGoogle = $titleOnGoogle;
            }
            if ($cluster_id) {
                $article->cluster_id = $cluster_id;
            }

            if ($cites_id) {
                $article->cites_id = $cites_id;
            }
            if ($cites_count) {
                $article->cites_count = $cites_count;
            }
            if ($mla) {
                $article->mla = $mla;
            }
            if ($apa) {
                $article->apa = $apa;
            }
            if ($chicago) {
                $article->chicago = $chicago;
            }
            if ($harvard) {
                $article->harvard = $harvard;
            }
            if ($vancouver) {
                $article->harvard = $vancouver;
            }
            if ($abstract) {
                $article->abstract = $abstract;
            }
            if ($source) {
                $article->source = $source;
            }
            if ($usable) {
                $article->usable = $usable;
            }
            if ($reference) {
                $article->reference = $reference;
            }
            if ($language) {
                $article->language = $language;
            }
            $article->save();
            return $article;

        } else {
            // can not found article by id
            return null;
        }
    }

    private function updateArticleNonRequest($request, Article $article)
    {
        if ($article) {
            // update article đã có trong csdl
            // found article by id
            $title = $request->title;
            $author = $request->author;
            $journal = $request->journal;
            $volume = $request->volume;
            $number = $request->number;
            $year = $request->year;
            $uri = $request->uri;
            $titleOnGoogle = $request->titleOnGoogle;
            $cluster_id = $request->cluster_id;
            $cites_id = $request->cites_id;
            $cites_count = $request->cites_count;
            $mla = $request->mla;
            $apa = $request->apa;
            $chicago = $request->chicago;
            $harvard = $request->harvard;
            $vancouver = $request->vancouver;
            $abstract = $request->abstract;
            $source = $request->source;
            $usable = $request->usable;
            $reference = $request->reference;
            $language = $request->language;
            if ($title) {
                $article->title = $title;
            }
            if ($author) {
                $article->author = $author;
            }
            if ($journal) {
                $article->journal = $journal;
            }
            if ($volume) {
                $article->volume = $volume;
            }
            if ($number) {
                $article->number = $number;
            }
            if ($year) {
                $article->year = $year;
            }
            if ($uri) {
                $article->uri = $uri;
            }
            if ($titleOnGoogle) {
                $article->titleOnGoogle = $titleOnGoogle;
            }
            if ($cluster_id) {
                $article->cluster_id = $cluster_id;
            }

            if ($cites_id) {
                $article->cites_id = $cites_id;
            }
            if ($cites_count) {
                $article->cites_count = $cites_count;
            }
            if ($mla) {
                $article->mla = $mla;
            }
            if ($apa) {
                $article->apa = $apa;
            }
            if ($chicago) {
                $article->chicago = $chicago;
            }
            if ($harvard) {
                $article->harvard = $harvard;
            }
            if ($vancouver) {
                $article->harvard = $vancouver;
            }
            if ($abstract) {
                $article->abstract = $abstract;
            }
            if ($source) {
                $article->source = $source;
            }
            if ($usable) {
                $article->usable = $usable;
            }
            if ($reference) {
                $article->reference = $reference;
            }
            if ($language) {
                $article->language = $language;
            }
            $article->save();
            return $article;

        } else {
            // can not found article by id
            return null;
        }
    }

    /**
     * create new article
     * @param Article $request
     * @return Article
     */
    private function createArticle(Request $request)
    {
        $title = $request->title;
        $author = $request->author;
        $journal = $request->journal;
        $volume = $request->volume;
        $number = $request->number;
        $year = $request->year;
        $uri = $request->uri;
        $titleOnGoogle = $request->titleOnGoogle;
        $cluster_id = $request->cluster_id;
        $cites_id = $request->cites_id;
        $cites_count = $request->cites_count;
        $mla = $request->mla;
        $apa = $request->apa;
        $chicago = $request->chicago;
        $harvard = $request->harvard;
        $vancouver = $request->vancouver;
        $abstract = $request->abstract;
        $source = $request->source;
        $usable = $request->usable;
        $reference = $request->reference;
        $language = $request->language;
        $article = new Article();
        if ($title) {
            $article->title = $title;
        }
        if ($author) {
            $article->author = $author;
        }
        if ($journal) {
            $article->journal = $journal;
        }
        if ($volume) {
            $article->volume = $volume;
        }
        if ($number) {
            $article->number = $number;
        }
        if ($year) {
            $article->year = $year;
        }
        if ($uri) {
            $article->uri = $uri;
        }
        if ($titleOnGoogle) {
            $article->titleOnGoogle = $titleOnGoogle;
        }
        if ($cluster_id) {
            $article->cluster_id = $cluster_id;
        }

        if ($cites_id) {
            $article->cites_id = $cites_id;
        }
        if ($cites_count) {
            $article->cites_count = $cites_count;
        }
        if ($mla) {
            $article->mla = $mla;
        }
        if ($apa) {
            $article->apa = $apa;
        }
        if ($chicago) {
            $article->chicago = $chicago;
        }
        if ($harvard) {
            $article->harvard = $harvard;
        }
        if ($vancouver) {
            $article->vancouver = $vancouver;
        }
        if ($abstract) {
            $article->abstract = $abstract;
        }
        if ($source) {
            $article->source = $source;
        }
        if ($usable) {
            $article->usable = $usable;
        }
        if ($reference) {
            $article->reference = $reference;
        }
        if ($language) {
            $article->language = $language;
        }

        $article->save();
        return $article;
    }

    private function createArticleNonRequest($request)
    {
        $title = $request->title;
        $author = $request->author;
        $journal = $request->journal;
        $volume = $request->volume;
        $number = $request->number;
        $year = $request->year;
        $uri = $request->uri;
        $titleOnGoogle = $request->titleOnGoogle;
        $cluster_id = $request->cluster_id;
        $cites_id = $request->cites_id;
        $cites_count = $request->cites_count;
        $mla = $request->mla;
        $apa = $request->apa;
        $chicago = $request->chicago;
        $harvard = $request->harvard;
        $vancouver = $request->vancouver;
        $abstract = $request->abstract;
        $source = $request->source;
        $usable = $request->usable;
        $reference = $request->reference;
        $language = $request->language;
        $article = new Article();
        if ($title) {
            $article->title = $title;
        }
        if ($author) {
            $article->author = $author;
        }
        if ($journal) {
            $article->journal = $journal;
        }
        if ($volume) {
            $article->volume = $volume;
        }
        if ($number) {
            $article->number = $number;
        }
        if ($year) {
            $article->year = $year;
        }
        if ($uri) {
            $article->uri = $uri;
        }
        if ($titleOnGoogle) {
            $article->titleOnGoogle = $titleOnGoogle;
        }
        if ($cluster_id) {
            $article->cluster_id = $cluster_id;
        }

        if ($cites_id) {
            $article->cites_id = $cites_id;
        }
        if ($cites_count) {
            $article->cites_count = $cites_count;
        }
        if ($mla) {
            $article->mla = $mla;
        }
        if ($apa) {
            $article->apa = $apa;
        }
        if ($chicago) {
            $article->chicago = $chicago;
        }
        if ($harvard) {
            $article->harvard = $harvard;
        }
        if ($vancouver) {
            $article->vancouver = $vancouver;
        }
        if ($abstract) {
            $article->abstract = $abstract;
        }
        if ($source) {
            $article->source = $source;
        }
        if ($usable) {
            $article->usable = $usable;
        }
        if ($reference) {
            $article->reference = $reference;
        }
        if ($language) {
            $article->language = $language;
        }

        $article->save();
        return $article;
    }


}
